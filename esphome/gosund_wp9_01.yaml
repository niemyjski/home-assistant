substitutions:
  device_name: gosund_wp9_01
  friendly_name: Gosund WP9

esphome:
  name: "${device_name}"
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name}"
    password: !secret wifi_fallback_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: True
    name: "${friendly_name} Button"
    id: "${device_name}_button"
    on_multi_click:
      - timing:
          - ON for at least 2s
        invalid_cooldown: 5s
        then:
          - logger.log: "Multi-Click 0 Executed"
          - if:
              condition:
                lambda: "return id(${device_name}_relay_1).state && id(${device_name}_relay_2).state && id(${device_name}_relay_3).state && id(${device_name}_relay_4).state;"
              then:
                - lambda: |-
                    ${device_name}_relay_1->turn_off();
                    id(${device_name}_relay_2).turn_off();
                    id(${device_name}_relay_3).turn_off();
                    id(${device_name}_relay_4).turn_off();
              else:
                - switch.turn_on: "${device_name}_relay_1"
                - switch.turn_on: "${device_name}_relay_2"
                - switch.turn_on: "${device_name}_relay_3"
                - switch.turn_on: "${device_name}_relay_4"
      - timing:
          - ON for 0s to 1s
          - OFF for at least 1s
        invalid_cooldown: 5s
        then:
          - logger.log: "Multi-Click 1 Executed"
          - switch.toggle: "${device_name}_relay_2"
      - timing:
          - ON for 0s to 1s
          - OFF for at most 1s
          - ON for at least 0s
          - OFF for at least 1s
        invalid_cooldown: 5s
        then:
          - logger.log: "Multi-Click 2 Executed"
          - switch.toggle: "${device_name}_relay_3"
      - timing:
          - ON for 0s to 1s
          - OFF for at most 1s
          - ON for at least 0s
          - OFF for at most 1s
          - ON for at least 0s
          - OFF for at least 1s
        invalid_cooldown: 5s
        then:
          - logger.log: "Multi-Click 4 Executed"
          - switch.toggle: "${device_name}_relay_4"
      - timing:
          - ON for 0s to 1s
          - OFF for at most 1s
          - ON for at least 0s
          - OFF for at most 1s
          - ON for at least 0s
          - OFF for at most 1s
          - ON for at least 0s
          - OFF for at least 1s
        invalid_cooldown: 5s
        then:
          - logger.log: "Multi-Click 5 Executed"
          - switch.toggle: "${device_name}_relay_1"

  - platform: status
    name: "${friendly_name} Status"
    id: "${device_name}_status"

switch:
  - platform: gpio
    name: "${friendly_name} Relay 1"
    id: "${device_name}_relay_1"
    pin: GPIO5
    on_turn_on:
      - output.turn_on: led_1
    on_turn_off:
      - output.turn_off: led_1
  - platform: gpio
    name: "${friendly_name} Relay 2"
    id: "${device_name}_relay_2"
    pin: GPIO14
    on_turn_on:
      - output.turn_on: led_2
    on_turn_off:
      - output.turn_off: led_2
  - platform: gpio
    name: "${friendly_name} Relay 3"
    id: "${device_name}_relay_3"
    pin: GPIO12
    on_turn_on:
      - output.turn_on: led_3
    on_turn_off:
      - output.turn_off: led_3
  - platform: gpio
    name: "${friendly_name} Relay 4"
    id: "${device_name}_relay_4"
    pin: GPIO13
    on_turn_on:
      - output.turn_on: led_4
    on_turn_off:
      - output.turn_off: led_4
  - platform: restart
    name: "${friendly_name} Restart"
    id: "${device_name}_restart"

output:
  - platform: gpio
    pin: GPIO0
    inverted: true
    id: led_1
  - platform: gpio
    pin: GPIO3
    inverted: true
    id: led_2
  - platform: gpio
    pin: GPIO2
    inverted: true
    id: led_3
  - platform: gpio
    pin: GPIO1
    inverted: true
    id: led_4

sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi signal"
    id: "${device_name}_wifi_signal"
    update_interval: 60s
  - platform: uptime
    name: "${friendly_name} Uptime"
    id: "${device_name}_uptime"
    update_interval: 60s

text_sensor:
  - platform: version
    name: "${friendly_name} ESPHome Version"
    id: "${device_name}_esphome_version"